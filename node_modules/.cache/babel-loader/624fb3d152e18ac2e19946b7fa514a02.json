{"ast":null,"code":"var _jsxFileName = \"D:\\\\MondayHW-other\\\\src\\\\Todolist.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {FilterValuesType} from './App2';\n// import { Tasks } from './Tasks';\n\n// type TaskType = {\n//     id: number\n//     title: string\n//     isDone: boolean\n// }\n\n// type PropsType = {\n//     title: string\n//     tasks: Array<TaskType>\n//     removeTask: (taskId: number) => void\n//     deleteAllTasks: () => void\n// }\n\n// export function Todolist(props: PropsType) {\n\n//     let [filter, setFilter] = useState<FilterValuesType>('all');\n\n//     let tasksForTodolist = props.tasks;\n\n//     if (filter === \"active\") {\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\n//     }\n//     if (filter === \"three\") {\n//         tasksForTodolist = props.tasks.filter(t => t.id < 4);\n//     };\n\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//     return <div>\n//         <h3>{props.title}</h3>\n//         <div>\n//             <input/>\n//             <button>+</button>\n//         </div>\n//         <ul>\n//             {\n//                 props.tasks.map(t => <li key={t.id}>\n//                     <input type=\"checkbox\" checked={t.isDone}/>\n//                     <span>{t.title}</span>\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\n//                 </li>)\n//             }\n//         </ul>\n//         <button onClick={()=> props.deleteAllTasks()}>Delete all tasks</button>\n//         <div>\n\n//             <button onClick={ () => changeFilter('all')  }>\n//                 All\n//             </button>\n//             <button onClick={ () => changeFilter('active')  }>\n//                 Active\n//             </button>\n//             <button onClick={ () => {changeFilter(\"completed\") } }>\n//                 Completed\n//             </button>\n//             <button onClick={() => { changeFilter(\"three\") }}>\n//             Three\n//             </button>\n//         </div>\n//     </div>\n// }\n\n//------------------------------------------------------------------------------------------------\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n  let [filter, setFilter] = useState(\"all\");\n  let tasksForTodolist = props.tasks;\n  if (filter === \"three\") {\n    tasksForTodolist = props.tasks.filter(t => t.id < 4);\n  }\n  if (filter === \"active\") {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === false);\n  }\n  if (filter === \"completed\") {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksForTodolist.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: t.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.removeTask(t.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.deleteAllTasks(),\n      children: \"DELETE ALL TASKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"three\");\n        },\n        children: \"Give me the first three\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"all\");\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"active\");\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"completed\");\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n}\n_s(Todolist, \"boPJerHaELAyf+PNkR+Y8+JetQg=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","filter","setFilter","tasksForTodolist","tasks","t","id","isDone","changeFilter","value","title","map","removeTask","deleteAllTasks"],"sources":["D:/MondayHW-other/src/Todolist.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import {FilterValuesType} from './App2';\r\n// import { Tasks } from './Tasks';\r\n\r\n// type TaskType = {\r\n//     id: number\r\n//     title: string\r\n//     isDone: boolean\r\n// }\r\n\r\n// type PropsType = {\r\n//     title: string\r\n//     tasks: Array<TaskType>\r\n//     removeTask: (taskId: number) => void\r\n//     deleteAllTasks: () => void\r\n// }\r\n\r\n\r\n// export function Todolist(props: PropsType) {\r\n\r\n//     let [filter, setFilter] = useState<FilterValuesType>('all');\r\n\r\n//     let tasksForTodolist = props.tasks;\r\n\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n//     }\r\n//     if (filter === \"three\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.id < 4);\r\n//     };\r\n\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//     return <div>\r\n//         <h3>{props.title}</h3>\r\n//         <div>\r\n//             <input/>\r\n//             <button>+</button>\r\n//         </div>\r\n//         <ul>\r\n//             {\r\n//                 props.tasks.map(t => <li key={t.id}>\r\n//                     <input type=\"checkbox\" checked={t.isDone}/>\r\n//                     <span>{t.title}</span>\r\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n//                 </li>)\r\n//             }\r\n//         </ul>\r\n//         <button onClick={()=> props.deleteAllTasks()}>Delete all tasks</button>\r\n//         <div>\r\n            \r\n//             <button onClick={ () => changeFilter('all')  }>\r\n//                 All\r\n//             </button>\r\n//             <button onClick={ () => changeFilter('active')  }>\r\n//                 Active\r\n//             </button>\r\n//             <button onClick={ () => {changeFilter(\"completed\") } }>\r\n//                 Completed\r\n//             </button>\r\n//             <button onClick={() => { changeFilter(\"three\") }}>\r\n//             Three\r\n//             </button>\r\n//         </div>\r\n//     </div>\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//------------------------------------------------------------------------------------------------\r\n\r\nimport React, {useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\ntype TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: number) => void\r\n    //changeFilter: (value: FilterValuesType) => void\r\n    deleteAllTasks:()=>void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let tasksForTodolist = props.tasks;\r\n\r\n    if (filter === \"three\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.id<4);\r\n    }\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input/>\r\n            <button>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                tasksForTodolist.map(t => <li key={t.id}>\r\n                    <input type=\"checkbox\" checked={t.isDone}/>\r\n                    <span>{t.title}</span>\r\n                    <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n                </li>)\r\n            }\r\n        </ul>\r\n        <button onClick={()=>props.deleteAllTasks()}>DELETE ALL TASKS</button>\r\n        <div>\r\n            <button onClick={ () => { changeFilter(\"three\") } }>\r\n                Give me the first three\r\n            </button>\r\n            <button onClick={ () => { changeFilter(\"all\") } }>\r\n                All\r\n            </button>\r\n            <button onClick={ () => { changeFilter(\"active\") } }>\r\n                Active\r\n            </button>\r\n            <button onClick={ () => { changeFilter(\"completed\") } }>\r\n                Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}