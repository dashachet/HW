{"ast":null,"code":"var _jsxFileName = \"D:\\\\MondayHW-other\\\\src\\\\App2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: 2,\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: 3,\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: 4,\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: 5,\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const deleteAllTasks = () => setTasks([]);\n  const removeTask = taskId => {\n    let filteredTasks = tasks.filter(t => t.id != t.id);\n    setTasks(filteredTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: tasks,\n      removeTask: removeTask,\n      deleteAllTasks: deleteAllTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"K04ifNUXsrOHCqcSzkK8MysZ0uM=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------\n\n// import React, {useState} from 'react';\n// import './App.css';\n// import {Todolist} from './Todolist';\n//\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\" | \"three\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: 1, title: \"HTML&CSS\", isDone: true},\n//         {id: 2, title: \"JS\", isDone: true},\n//         {id: 3, title: \"ReactJS\", isDone: false},\n//         {id: 4, title: \"Rest API\", isDone: false},\n//         {id: 5, title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     const deleteAllTasks = () => {\n//         setTasks([])\n//     }\n//\n//     function removeTask(id: number) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     // let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//     //\n//     // let tasksForTodolist = tasks;\n//     //\n//     // if (filter === \"active\") {\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     // }\n//     // if (filter === \"completed\") {\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     // }\n//     //\n//     // function changeFilter(value: FilterValuesType) {\n//     //     setFilter(value);\n//     // }\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist\n//                 title=\"What to learn\"\n//                 tasks={tasks}\n//                 removeTask={removeTask}\n//                 //changeFilter={changeFilter}\n//                 deleteAllTasks={deleteAllTasks}\n//\n//             />\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","App","tasks","setTasks","id","title","isDone","deleteAllTasks","removeTask","taskId","filteredTasks","filter","t"],"sources":["D:/MondayHW-other/src/App2.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\" | \"three\";\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        {id: 1, title: \"HTML&CSS\", isDone: true},\r\n        {id: 2, title: \"JS\", isDone: true},\r\n        {id: 3, title: \"ReactJS\", isDone: false},\r\n        {id: 4, title: \"Rest API\", isDone: false},\r\n        {id: 5, title: \"GraphQL\", isDone: false},\r\n    ]);\r\n\r\n    const deleteAllTasks = () => setTasks([])\r\n\r\n    const removeTask = (taskId: number) => {\r\n        let filteredTasks = tasks.filter( t => t.id != t.id)\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\" tasks={tasks}     removeTask={removeTask}  deleteAllTasks={deleteAllTasks}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//-------------------------------------------------------------------------\r\n\r\n// import React, {useState} from 'react';\r\n// import './App.css';\r\n// import {Todolist} from './Todolist';\r\n//\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\" | \"three\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: 1, title: \"HTML&CSS\", isDone: true},\r\n//         {id: 2, title: \"JS\", isDone: true},\r\n//         {id: 3, title: \"ReactJS\", isDone: false},\r\n//         {id: 4, title: \"Rest API\", isDone: false},\r\n//         {id: 5, title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     const deleteAllTasks = () => {\r\n//         setTasks([])\r\n//     }\r\n//\r\n//     function removeTask(id: number) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     // let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//     //\r\n//     // let tasksForTodolist = tasks;\r\n//     //\r\n//     // if (filter === \"active\") {\r\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     // }\r\n//     // if (filter === \"completed\") {\r\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     // }\r\n//     //\r\n//     // function changeFilter(value: FilterValuesType) {\r\n//     //     setFilter(value);\r\n//     // }\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist\r\n//                 title=\"What to learn\"\r\n//                 tasks={tasks}\r\n//                 removeTask={removeTask}\r\n//                 //changeFilter={changeFilter}\r\n//                 deleteAllTasks={deleteAllTasks}\r\n//\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,YAAY;AAAC;AAIpC,SAASC,GAAG,GAAG;EAAA;EAEX,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAC7B;IAACK,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EACxC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EAClC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EACxC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EACzC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,CAC3C,CAAC;EAEF,MAAMC,cAAc,GAAG,MAAMJ,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMK,UAAU,GAAIC,MAAc,IAAK;IACnC,IAAIC,aAAa,GAAGR,KAAK,CAACS,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACR,EAAE,IAAIQ,CAAC,CAACR,EAAE,CAAC;IACpDD,QAAQ,CAACO,aAAa,CAAC;EAC3B,CAAC;EAID,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MAAC,KAAK,EAAC,eAAe;MAAC,KAAK,EAAER,KAAM;MAAK,UAAU,EAAEM,UAAW;MAAE,cAAc,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAC1G;AAEd;AAAC,GAxBQN,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;;AAGlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}