{"ast":null,"code":"var _jsxFileName = \"D:\\\\1-todolist\\\\src\\\\Todolist.tsx\";\nimport React from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    title,\n    tasks\n  } = _ref;\n  const tittle = {\n    title\n  }.title; // вместо {props.title}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: tittle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !tasks.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"EMPTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this) : tasks.map(task => {\n        debugger;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 35\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 83\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Button","Todolist","title","tasks","tittle","length","map","task","isDone","id"],"sources":["D:/1-todolist/src/Todolist.tsx"],"sourcesContent":["import React  from \"react\";\r\nimport { Button } from \"./Button\";\r\n\r\ntype ListPropsType= {\r\n    title: string\r\n    tasks: Task[] // Array<Task>\r\n\r\n}\r\n\r\nexport type Task = {  // экспорт для проверки типизации\r\n    id: number, \r\n    title: string, \r\n    isDone:  boolean\r\n}\r\n\r\nexport const Todolist = ({title, tasks}:ListPropsType) => {\r\n    const tittle = {title}.title // вместо {props.title}\r\n    return (\r\n        <div>\r\n            <h3>{tittle}</h3>\r\n            <div>\r\n                <input />\r\n                <button>+</button>\r\n            </div>\r\n            <ul>\r\n                \r\n                {!tasks.length\r\n                ? <div>EMPTY</div>\r\n                :tasks.map((task) =>{\r\n                    debugger\r\n                return (\r\n                <li key={task.id}><input type=\"checkbox\" checked={task.isDone} /> <span>{task.title}</span></li>  )\r\n                })\r\n                \r\n            \r\n            }\r\n            </ul>\r\n            <div>\r\n                <Button title={\"All\"}/>\r\n                <Button title={\"Active\"} />\r\n                <Button title={\"Completed\"} />\r\n                <button>All</button>\r\n                <button></button>\r\n                <button></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAO,OAAO;AAC1B,SAASC,MAAM,QAAQ,UAAU;AAAC;AAclC,OAAO,MAAMC,QAAQ,GAAG,QAAkC;EAAA,IAAjC;IAACC,KAAK;IAAEC;EAAmB,CAAC;EACjD,MAAMC,MAAM,GAAG;IAACF;EAAK,CAAC,CAACA,KAAK,EAAC;EAC7B,oBACI;IAAA,wBACI;MAAA,UAAKE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eACjB;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAA,UAEK,CAACD,KAAK,CAACE,MAAM,gBACZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,GACjBF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAI;QAChB;QACJ,oBACA;UAAA,wBAAkB;YAAO,IAAI,EAAC,UAAU;YAAC,OAAO,EAAEA,IAAI,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAG,oBAAC;YAAA,UAAOD,IAAI,CAACL;UAAK;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA,GAAlFK,IAAI,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAAgF;MAChG,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAID,eACL;MAAA,wBACI,QAAC,MAAM;QAAC,KAAK,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACvB,QAAC,MAAM;QAAC,KAAK,EAAE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B,QAAC,MAAM;QAAC,KAAK,EAAE;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAhCYR,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}