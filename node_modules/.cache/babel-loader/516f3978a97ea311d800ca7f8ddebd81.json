{"ast":null,"code":"var _jsxFileName = \"D:\\\\MondayHW-other\\\\src\\\\Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n  let [filter, setFilter] = useState('all');\n  let tasksForTodolist = props.tasks;\n  if (filter === \"active\") {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === false);\n  }\n  if (filter === \"completed\") {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === true);\n  }\n  if (filter === \"three\") {\n    tasksForTodolist = props.tasks.filter(t => t.id < 4);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: t.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.removeTask(t.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteAllTasks(),\n        children: \"Delete all tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.changeFilter(\"all\");\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.changeFilter('active');\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"completed\");\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          changeFilter(\"three\");\n        },\n        children: \"Three\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n\n//------------------------------------------------------------------------------------------------\n\n// import React, {useState} from 'react';\n// import {FilterValuesType} from './App';\n//\n// type TaskType = {\n//     id: number\n//     title: string\n//     isDone: boolean\n// }\n//\n// type PropsType = {\n//     title: string\n//     tasks: Array<TaskType>\n//     removeTask: (taskId: number) => void\n//     //changeFilter: (value: FilterValuesType) => void\n//     deleteAllTasks:()=>void\n// }\n//\n// export function Todolist(props: PropsType) {\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = props.tasks;\n//\n//     if (filter === \"three\") {\n//         tasksForTodolist = props.tasks.filter(t => t.id<4);\n//     }\n//     if (filter === \"active\") {\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//     return <div>\n//         <h3>{props.title}</h3>\n//         <div>\n//             <input/>\n//             <button>+</button>\n//         </div>\n//         <ul>\n//             {\n//                 tasksForTodolist.map(t => <li key={t.id}>\n//                     <input type=\"checkbox\" checked={t.isDone}/>\n//                     <span>{t.title}</span>\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\n//                 </li>)\n//             }\n//         </ul>\n//         <button onClick={()=>props.deleteAllTasks()}>DELETE ALL TASKS</button>\n//         <div>\n//             <button onClick={ () => { changeFilter(\"three\") } }>\n//                 Give me the first three\n//             </button>\n//             <button onClick={ () => { changeFilter(\"all\") } }>\n//                 All\n//             </button>\n//             <button onClick={ () => { changeFilter(\"active\") } }>\n//                 Active\n//             </button>\n//             <button onClick={ () => { changeFilter(\"completed\") } }>\n//                 Completed\n//             </button>\n//         </div>\n//     </div>\n// }\n_s(Todolist, \"W/UjwQokI5qYZ80z+yO8skpbfNg=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","filter","setFilter","tasksForTodolist","tasks","t","isDone","id","changeFilter","value","title","map","removeTask","deleteAllTasks"],"sources":["D:/MondayHW-other/src/Todolist.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {FilterValuesType} from './App2';\r\nimport { Tasks } from './Tasks';\r\n\r\ntype TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: number) => void\r\n    changeFilter?: (value: FilterValuesType) => void\r\n    deleteAllTasks: () => void\r\n}\r\n\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>('all');\r\n\r\n    let tasksForTodolist = props.tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n    }\r\n    if (filter === \"three\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.id < 4)\r\n    }\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input/>\r\n            <button>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => <li key={t.id}>\r\n                    <input type=\"checkbox\" checked={t.isDone}/>\r\n                    <span>{t.title}</span>\r\n                    <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n                </li>)\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button onClick={()=> props.deleteAllTasks()}>Delete all tasks</button>\r\n            <button onClick={ () => {props.changeFilter(\"all\") } }>\r\n                All\r\n            </button>\r\n            <button onClick={ () => {props.changeFilter('active') } }>\r\n                Active\r\n            </button>\r\n            <button onClick={ () => {changeFilter(\"completed\") } }>\r\n                Completed\r\n            </button>\r\n            <button onClick={() => { changeFilter(\"three\") }}>\r\n            Three\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//------------------------------------------------------------------------------------------------\r\n\r\n// import React, {useState} from 'react';\r\n// import {FilterValuesType} from './App';\r\n//\r\n// type TaskType = {\r\n//     id: number\r\n//     title: string\r\n//     isDone: boolean\r\n// }\r\n//\r\n// type PropsType = {\r\n//     title: string\r\n//     tasks: Array<TaskType>\r\n//     removeTask: (taskId: number) => void\r\n//     //changeFilter: (value: FilterValuesType) => void\r\n//     deleteAllTasks:()=>void\r\n// }\r\n//\r\n// export function Todolist(props: PropsType) {\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = props.tasks;\r\n//\r\n//     if (filter === \"three\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.id<4);\r\n//     }\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//     return <div>\r\n//         <h3>{props.title}</h3>\r\n//         <div>\r\n//             <input/>\r\n//             <button>+</button>\r\n//         </div>\r\n//         <ul>\r\n//             {\r\n//                 tasksForTodolist.map(t => <li key={t.id}>\r\n//                     <input type=\"checkbox\" checked={t.isDone}/>\r\n//                     <span>{t.title}</span>\r\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n//                 </li>)\r\n//             }\r\n//         </ul>\r\n//         <button onClick={()=>props.deleteAllTasks()}>DELETE ALL TASKS</button>\r\n//         <div>\r\n//             <button onClick={ () => { changeFilter(\"three\") } }>\r\n//                 Give me the first three\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"all\") } }>\r\n//                 All\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"active\") } }>\r\n//                 Active\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"completed\") } }>\r\n//                 Completed\r\n//             </button>\r\n//         </div>\r\n//     </div>\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}