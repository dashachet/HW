[{"D:\\1-todolist\\src\\index.tsx":"1","D:\\1-todolist\\src\\App.tsx":"2","D:\\1-todolist\\src\\Todolist.tsx":"3","D:\\1-todolist\\src\\Button.tsx":"4","D:\\MondayHW-other\\src\\index.tsx":"5","D:\\MondayHW-other\\src\\serviceWorker.ts":"6","D:\\MondayHW-other\\src\\App2.tsx":"7","D:\\MondayHW-other\\src\\Todolist.tsx":"8"},{"size":456,"mtime":1729173039994,"results":"9","hashOfConfig":"10"},{"size":805,"mtime":1729181326653,"results":"11","hashOfConfig":"10"},{"size":1188,"mtime":1729182313801,"results":"12","hashOfConfig":"10"},{"size":189,"mtime":1729182201128,"results":"13","hashOfConfig":"10"},{"size":549,"mtime":1730725454473,"results":"14","hashOfConfig":"15"},{"size":5295,"mtime":1587586615167,"results":"16","hashOfConfig":"15"},{"size":2674,"mtime":1730725619106,"results":"17","hashOfConfig":"15"},{"size":4382,"mtime":1730726758014,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lo9o2g",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l1s9n0",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"D:\\1-todolist\\src\\index.tsx",[],[],"D:\\1-todolist\\src\\App.tsx",[],[],"D:\\1-todolist\\src\\Todolist.tsx",[],[],"D:\\1-todolist\\src\\Button.tsx",[],[],"D:\\MondayHW-other\\src\\index.tsx",[],[],"D:\\MondayHW-other\\src\\serviceWorker.ts",[],[],"D:\\MondayHW-other\\src\\App2.tsx",["44"],[],"D:\\MondayHW-other\\src\\Todolist.tsx",["45","46"],[],"import React, { useState } from 'react';\r\nimport {FilterValuesType} from './App2';\r\nimport { Tasks } from './Tasks';\r\nimport { tab } from '@testing-library/user-event/dist/tab';\r\n\r\ntype TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: number) => void\r\n    deleteAllTasks: () => void\r\n}\r\n\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>('all');\r\n\r\n    let tasksForTodolist = props.tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n    }\r\n    if (filter === \"three\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.id < 4);\r\n    };\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input/>\r\n            <button>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                tasksForTodolist.map(t => <li key={t.id}>\r\n                    <input type=\"checkbox\" checked={t.isDone}/>\r\n                    <span>{t.title}</span>\r\n                    <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n                </li>)\r\n            }\r\n        </ul>\r\n        <button onClick={()=> props.deleteAllTasks()}>Delete all tasks</button>\r\n        <div>\r\n            \r\n            <button onClick={ () => changeFilter('all')  }>\r\n                All\r\n            </button>\r\n            <button onClick={ () => changeFilter('active')  }>\r\n                Active\r\n            </button>\r\n            <button onClick={ () => {changeFilter(\"completed\") } }>\r\n                Completed\r\n            </button>\r\n            <button onClick={() => { changeFilter(\"three\") }}>\r\n            Three\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //------------------------------------------------------------------------------------------------\r\n\r\n// import React, {useState} from 'react';\r\n// import {FilterValuesType} from './App2';\r\n\r\n// type TaskType = {\r\n//     id: number\r\n//     title: string\r\n//     isDone: boolean\r\n// }\r\n\r\n// type PropsType = {\r\n//     title: string\r\n//     tasks: Array<TaskType>\r\n//     removeTask: (taskId: number) => void\r\n//     //changeFilter: (value: FilterValuesType) => void\r\n//     deleteAllTasks:()=>void\r\n// }\r\n\r\n// export function Todolist(props: PropsType) {\r\n\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n//     let tasksForTodolist = props.tasks;\r\n\r\n//     if (filter === \"three\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.id<4);\r\n//     }\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n//     }\r\n\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n\r\n//     return <div>\r\n//         <h3>{props.title}</h3>\r\n//         <div>\r\n//             <input/>\r\n//             <button>+</button>\r\n//         </div>\r\n//         <ul>\r\n//             {\r\n//                 tasksForTodolist.map(t => <li key={t.id}>\r\n//                     <input type=\"checkbox\" checked={t.isDone}/>\r\n//                     <span>{t.title}</span>\r\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n//                 </li>)\r\n//             }\r\n//         </ul>\r\n//         <button onClick={()=>props.deleteAllTasks()}>DELETE ALL TASKS</button>\r\n//         <div>\r\n//             <button onClick={ () => { changeFilter(\"three\") } }>\r\n//                 Give me the first three\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"all\") } }>\r\n//                 All\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"active\") } }>\r\n//                 Active\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"completed\") } }>\r\n//                 Completed\r\n//             </button>\r\n//         </div>\r\n//     </div>\r\n// }",{"ruleId":"47","severity":1,"message":"48","line":20,"column":53,"nodeType":"49","messageId":"50","endLine":20,"endColumn":55},{"ruleId":"51","severity":1,"message":"52","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":13},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Tasks' is defined but never used.","Identifier","unusedVar","'tab' is defined but never used."]