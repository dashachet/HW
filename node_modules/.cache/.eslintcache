[{"D:\\1-todolist\\src\\index.tsx":"1","D:\\1-todolist\\src\\App.tsx":"2","D:\\1-todolist\\src\\Todolist.tsx":"3","D:\\1-todolist\\src\\Button.tsx":"4","D:\\MondayHW-other\\src\\index.tsx":"5","D:\\MondayHW-other\\src\\serviceWorker.ts":"6","D:\\MondayHW-other\\src\\App2.tsx":"7","D:\\MondayHW-other\\src\\Todolist.tsx":"8","D:\\MondayHW-other\\src\\serviceWorke3r.ts":"9","D:\\MondayHW-other\\src\\App3.tsx":"10","D:\\MondayHW-other\\src\\Todolist3.tsx":"11"},{"size":456,"mtime":1729173039994,"results":"12","hashOfConfig":"13"},{"size":805,"mtime":1729181326653,"results":"14","hashOfConfig":"13"},{"size":1188,"mtime":1729182313801,"results":"15","hashOfConfig":"13"},{"size":189,"mtime":1729182201128,"results":"16","hashOfConfig":"13"},{"size":551,"mtime":1732514861023,"results":"17","hashOfConfig":"18"},{"size":5295,"mtime":1587586615167,"results":"19","hashOfConfig":"18"},{"size":2674,"mtime":1730725619106,"results":"20","hashOfConfig":"18"},{"size":4382,"mtime":1730726758014,"results":"21","hashOfConfig":"18"},{"size":5295,"mtime":1587586615167,"results":"22","hashOfConfig":"18"},{"size":6538,"mtime":1732517021778,"results":"23","hashOfConfig":"18"},{"size":5340,"mtime":1732517184301,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lo9o2g",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l1s9n0",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\1-todolist\\src\\index.tsx",[],[],"D:\\1-todolist\\src\\App.tsx",[],[],"D:\\1-todolist\\src\\Todolist.tsx",[],[],"D:\\1-todolist\\src\\Button.tsx",[],[],"D:\\MondayHW-other\\src\\index.tsx",[],[],"D:\\MondayHW-other\\src\\serviceWorker.ts",[],[],"D:\\MondayHW-other\\src\\App2.tsx",["60"],[],"import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\" | \"three\";\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        {id: 1, title: \"HTML&CSS\", isDone: true},\r\n        {id: 2, title: \"JS\", isDone: true},\r\n        {id: 3, title: \"ReactJS\", isDone: false},\r\n        {id: 4, title: \"Rest API\", isDone: false},\r\n        {id: 5, title: \"GraphQL\", isDone: false},\r\n    ]);\r\n\r\n    const deleteAllTasks = () => setTasks([])\r\n\r\n    const removeTask = (taskId: number) => {\r\n        let filteredTasks = tasks.filter( t => t.id != taskId)\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\" tasks={tasks}     removeTask={removeTask}  deleteAllTasks={deleteAllTasks}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//-------------------------------------------------------------------------\r\n\r\n// import React, {useState} from 'react';\r\n// import './App.css';\r\n// import {Todolist} from './Todolist';\r\n//\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\" | \"three\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: 1, title: \"HTML&CSS\", isDone: true},\r\n//         {id: 2, title: \"JS\", isDone: true},\r\n//         {id: 3, title: \"ReactJS\", isDone: false},\r\n//         {id: 4, title: \"Rest API\", isDone: false},\r\n//         {id: 5, title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     const deleteAllTasks = () => {\r\n//         setTasks([])\r\n//     }\r\n//\r\n//     function removeTask(id: number) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     // let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//     //\r\n//     // let tasksForTodolist = tasks;\r\n//     //\r\n//     // if (filter === \"active\") {\r\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     // }\r\n//     // if (filter === \"completed\") {\r\n//     //     tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     // }\r\n//     //\r\n//     // function changeFilter(value: FilterValuesType) {\r\n//     //     setFilter(value);\r\n//     // }\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist\r\n//                 title=\"What to learn\"\r\n//                 tasks={tasks}\r\n//                 removeTask={removeTask}\r\n//                 //changeFilter={changeFilter}\r\n//                 deleteAllTasks={deleteAllTasks}\r\n//\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;","D:\\MondayHW-other\\src\\Todolist.tsx",["61","62"],[],"import React, { useState } from 'react';\r\nimport {FilterValuesType} from './App2';\r\nimport { Tasks } from './Tasks';\r\nimport { tab } from '@testing-library/user-event/dist/tab';\r\n\r\ntype TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: number) => void\r\n    deleteAllTasks: () => void\r\n}\r\n\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>('all');\r\n\r\n    let tasksForTodolist = props.tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n    }\r\n    if (filter === \"three\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.id < 4);\r\n    };\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input/>\r\n            <button>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                tasksForTodolist.map(t => <li key={t.id}>\r\n                    <input type=\"checkbox\" checked={t.isDone}/>\r\n                    <span>{t.title}</span>\r\n                    <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n                </li>)\r\n            }\r\n        </ul>\r\n        <button onClick={()=> props.deleteAllTasks()}>Delete all tasks</button>\r\n        <div>\r\n            \r\n            <button onClick={ () => changeFilter('all')  }>\r\n                All\r\n            </button>\r\n            <button onClick={ () => changeFilter('active')  }>\r\n                Active\r\n            </button>\r\n            <button onClick={ () => {changeFilter(\"completed\") } }>\r\n                Completed\r\n            </button>\r\n            <button onClick={() => { changeFilter(\"three\") }}>\r\n            Three\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //------------------------------------------------------------------------------------------------\r\n\r\n// import React, {useState} from 'react';\r\n// import {FilterValuesType} from './App2';\r\n\r\n// type TaskType = {\r\n//     id: number\r\n//     title: string\r\n//     isDone: boolean\r\n// }\r\n\r\n// type PropsType = {\r\n//     title: string\r\n//     tasks: Array<TaskType>\r\n//     removeTask: (taskId: number) => void\r\n//     //changeFilter: (value: FilterValuesType) => void\r\n//     deleteAllTasks:()=>void\r\n// }\r\n\r\n// export function Todolist(props: PropsType) {\r\n\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n//     let tasksForTodolist = props.tasks;\r\n\r\n//     if (filter === \"three\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.id<4);\r\n//     }\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = props.tasks.filter(t => t.isDone === true);\r\n//     }\r\n\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n\r\n//     return <div>\r\n//         <h3>{props.title}</h3>\r\n//         <div>\r\n//             <input/>\r\n//             <button>+</button>\r\n//         </div>\r\n//         <ul>\r\n//             {\r\n//                 tasksForTodolist.map(t => <li key={t.id}>\r\n//                     <input type=\"checkbox\" checked={t.isDone}/>\r\n//                     <span>{t.title}</span>\r\n//                     <button onClick={ () => { props.removeTask(t.id) } }>x</button>\r\n//                 </li>)\r\n//             }\r\n//         </ul>\r\n//         <button onClick={()=>props.deleteAllTasks()}>DELETE ALL TASKS</button>\r\n//         <div>\r\n//             <button onClick={ () => { changeFilter(\"three\") } }>\r\n//                 Give me the first three\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"all\") } }>\r\n//                 All\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"active\") } }>\r\n//                 Active\r\n//             </button>\r\n//             <button onClick={ () => { changeFilter(\"completed\") } }>\r\n//                 Completed\r\n//             </button>\r\n//         </div>\r\n//     </div>\r\n// }","D:\\MondayHW-other\\src\\serviceWorke3r.ts",[],[],"D:\\MondayHW-other\\src\\App3.tsx",[],[],"D:\\MondayHW-other\\src\\Todolist3.tsx",["63","64"],[],{"ruleId":"65","severity":1,"message":"66","line":20,"column":53,"nodeType":"67","messageId":"68","endLine":20,"endColumn":55},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"74","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":27},{"ruleId":"69","severity":1,"message":"75","line":1,"column":52,"nodeType":"71","messageId":"72","endLine":1,"endColumn":60},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Tasks' is defined but never used.","Identifier","unusedVar","'tab' is defined but never used.","'ChangeEvent' is defined but never used.","'useState' is defined but never used."]